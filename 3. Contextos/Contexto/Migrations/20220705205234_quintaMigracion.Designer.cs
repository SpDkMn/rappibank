// <auto-generated />
using System;
using Contexto;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Contexto.Migrations
{
    [DbContext(typeof(BancoContexto))]
    [Migration("20220705205234_quintaMigracion")]
    partial class quintaMigracion
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Entidades.Auth", b =>
                {
                    b.Property<Guid>("AuthId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("AuthId");

                    b.ToTable("auth", (string)null);
                });

            modelBuilder.Entity("Entidades.Cuenta", b =>
                {
                    b.Property<Guid>("CuentaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Linea")
                        .HasColumnType("float");

                    b.Property<int>("MonedaCuenta")
                        .HasMaxLength(150)
                        .HasColumnType("int");

                    b.Property<string>("NumeroCuenta")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<double?>("Saldo")
                        .HasColumnType("float");

                    b.Property<int>("TipoCuenta")
                        .HasColumnType("int");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CuentaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("cuenta", (string)null);
                });

            modelBuilder.Entity("Entidades.Movimiento", b =>
                {
                    b.Property<Guid>("MovimientoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CuentaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Monto")
                        .HasMaxLength(150)
                        .HasColumnType("float");

                    b.Property<int>("Origen")
                        .HasColumnType("int");

                    b.HasKey("MovimientoId");

                    b.HasIndex("CuentaId");

                    b.ToTable("movimiento", (string)null);
                });

            modelBuilder.Entity("Entidades.Tarjeta", b =>
                {
                    b.Property<Guid>("TarjetaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Año")
                        .HasColumnType("int");

                    b.Property<string>("CVV")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<Guid>("CuentaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Mes")
                        .HasColumnType("int");

                    b.Property<string>("NumeroTarjeta")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("PIN")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("TarjetaId");

                    b.HasIndex("CuentaId")
                        .IsUnique();

                    b.HasIndex("UsuarioId");

                    b.ToTable("tarjeta", (string)null);
                });

            modelBuilder.Entity("Entidades.Usuario", b =>
                {
                    b.Property<Guid>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("ContraseñaWeb")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Edad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("UsuarioId");

                    b.ToTable("usuario", (string)null);
                });

            modelBuilder.Entity("Entidades.Cuenta", b =>
                {
                    b.HasOne("Entidades.Usuario", "Usuario")
                        .WithMany("Cuentas")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Entidades.Movimiento", b =>
                {
                    b.HasOne("Entidades.Cuenta", "Cuenta")
                        .WithMany("Movimientos")
                        .HasForeignKey("CuentaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cuenta");
                });

            modelBuilder.Entity("Entidades.Tarjeta", b =>
                {
                    b.HasOne("Entidades.Cuenta", "Cuenta")
                        .WithOne("Tarjeta")
                        .HasForeignKey("Entidades.Tarjeta", "CuentaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entidades.Usuario", "Usuario")
                        .WithMany("Tarjetas")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cuenta");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Entidades.Cuenta", b =>
                {
                    b.Navigation("Movimientos");

                    b.Navigation("Tarjeta");
                });

            modelBuilder.Entity("Entidades.Usuario", b =>
                {
                    b.Navigation("Cuentas");

                    b.Navigation("Tarjetas");
                });
#pragma warning restore 612, 618
        }
    }
}
